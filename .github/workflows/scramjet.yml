name: Build Scramjet

on:
  workflow_dispatch:

permissions: # Add this if using GITHUB_TOKEN for push
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Clone Scramjet repository
        run: git clone https://github.com/mercuryworkshop/scramjet scramjet # Clone into a 'scramjet' subfolder

      # The 'cd scramjet' step is not needed if using working-directory consistently

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest # Or pin to a specific pnpm version
          run_install: false

      - name: Install dependencies
        run: pnpm install
        working-directory: scramjet

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          rustup target add wasm32-unknown-unknown
        # working-directory not strictly needed here, but harmless

      - name: Install wasm-bindgen
        run: cargo install wasm-bindgen-cli
        # working-directory not strictly needed here

      - name: Install Binaryen
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_116/binaryen-version_116-x86_64-linux.tar.gz
          tar -xzf binaryen-version_116-x86_64-linux.tar.gz
          sudo mv binaryen-version_116/bin/wasm-opt /usr/local/bin/
          rm -rf binaryen-version_116 binaryen-version_116-x86_64-linux.tar.gz
        # working-directory not strictly needed for most of this, downloads will happen in CWD

      - name: Install wasm-snip fork
        run: cargo install --git https://github.com/r58Playz/wasm-snip
        # working-directory not strictly needed

      - name: Build rewriter
        run: pnpm rewriter:build
        working-directory: scramjet

      - name: Remove old build from current repo (if any)
        run: rm -rf scram # Runs in repo root

      - name: Build Scramjet
        run: pnpm build
        working-directory: scramjet

      - name: Move build, clean up, and commit
        run: |
          mv scramjet/dist ./scram  # Move to ./scram in current repo root
          rm -rf scramjet          # Remove the cloned scramjet directory

          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          
          git add scram
          # Only commit if there are staged changes
          if git diff --staged --quiet; then
            echo "No changes to commit in scram directory."
          else
            git commit -m "Build and add Scramjet artifacts from workflow"
          fi

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0 # Use a specific version
        with:
          github_token: ${{ secrets.GOD }} # Or ${{ secrets.GITHUB_TOKEN }} if permissions are set
          # branch: ${{ github.ref }} # Optional: explicitly specify branch, defaults to current

      - name: Upload scram artifact
        uses: actions/upload-artifact@v4
        with:
          name: scramjet-dist
          path: scram/
